version: '3.9'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        CONTAINER_PORT_BACK: ${BACKEND_CONTAINER_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_CONTAINER_PORT}"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        CONTAINER_PORT_FRONT: ${FRONTEND_CONTAINER_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_CONTAINER_PORT}"
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/share/nginx/html
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Europe/Paris
    env_file:
      - .env
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
